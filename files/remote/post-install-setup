#!/bin/bash
set -euo pipefail

echo "This is post-install-setup writing to /dev/console" > /dev/console

VERBOSE=1

if [ $VERBOSE -ne 0 ]; then
  set -x
fi

# Check if this has already been run before
if [ -f /var/run/post-install-setup ]; then
  echo "It appears that this post-install-setup script has been run before. Refusing to re-run. Aborting."
  exit 0
fi

echo "started" >> /var/run/post-install-setup

if [ $VERBOSE -ne 0 ]; then
  echo "Start of post-install-setup"
fi
echo "MSG2: This is post-install-setup writing to /dev/console" > /dev/console

function wait_for_wifi_interface {
  local max_retries=5
  set +e
  local n=0
  until [ $n -ge $max_retries ]; do
    # Try a few times
    ip link show wlp1s0 && break
    n=$[$n+1]
    sleep 5
  done
  set -e
  if [ $n -ge $max_retries ]; then
    echo "Giving up after ${max_retries} tries."
    exit 103
  fi  
}

function connect_to_wifi_once {
  # nmcli dev wifi connect <SSID> password <password>
  ifconfig || true
  ip link show || true
  nmcli dev || true
  nmcli con show || true
  nmcli device wifi list || true

  source <(cat /root/install-secrets/secrets.sh | grep '^WIFI_PASSPHRASE=')
  set +e
  nmcli dev wifi connect "djr (legacy)" password "$WIFI_PASSPHRASE"
  rc=$?
  set -e

  if [ $rc -ne 0 ]; then
    echo "nmcli failed with rc=${rc}"
  fi

  ip link show || true
  nmcli device wifi list || true
  return $rc
}

function connect_to_wifi {
  wait_for_wifi_interface

  local max_retries=5
  set +e
  local n=0
  until [ $n -ge $max_retries ]; do
    # Try a few times
    connect_to_wifi_once && break
    n=$[$n+1]
    sleep 5
  done
  set -e
  if [ $n -ge $max_retries ]; then
    echo "Giving up after ${max_retries} tries."
    exit 102
  fi
}

function network_manager {
  # pacman --noconfirm -S \
  #   networkmanager

#   cat <<EOF > /etc/NetworkManager/conf.d/dhcp-client.conf
# [main]
# dhcp=dhclient
# EOF

#   systemctl enable NetworkManager.service
  # systemctl disable dhcpcd
  # DEV="wlp1s0"
  # systemctl disable dhcpcd@"$DEV"


  connect_to_wifi

  # systemctl start sshd
}

function install_drivers {
  pacman -Syy

  pacman --noconfirm -S \
    xf86-input-synaptics
}

function install_and_setup_x {
  # Display Manager: LightDM
  # Greeter: lightdm-gtk3-greeter
  pacman --noconfirm -S \
    lightdm lightdm-gtk-greeter \
    xfce4 xfce4-goodies \
    xfce4-notifyd xfce4-power-manager


  # Enable the newly installed Light display manager (LightDM) so you can use it when we reboot.
  systemctl enable lightdm.service

  # https://wiki.archlinux.org/index.php/Xfce#Lock_the_screen
}

function cleanup {
  systemctl disable post-install
  # rm /etc/systemd/system/post-install.service
}

function run {
  network_manager
  install_drivers
  install_and_setup_x
  cleanup
}
run


# https://wiki.archlinux.org/index.php/NetworkManager#Problems_with_internal_DHCP_client
