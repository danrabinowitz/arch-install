#!/bin/bash
set -euo pipefail
set -x

echo "This file is remote AND in the chroot"

function locales {
  grep 'en_US.UTF-8 UTF-8' /etc/locale.gen
  # Uncomment the en_US locale
  sed -i 's/^#\(en_US\.UTF-8 UTF-8\)/\1/g' /etc/locale.gen
  locale-gen
  echo LANG=en_US.UTF-8 > /etc/locale.conf
  export LANG=en_US.UTF-8

}

function timezone {
  rm /etc/localtime
  ln -s /usr/share/zoneinfo/America/Denver /etc/localtime
  hwclock --systohc --utc
}

function network_config {
  HOSTNAME="djr-netbook-arch"
  echo "$HOSTNAME" > /etc/hostname
  cat <<EOF > /etc/hosts
#
# /etc/hosts: static lookup table for host names
#

#<ip-address>   <hostname.domain.org>   <hostname>
127.0.0.1       localhost.local         localhost  ${HOSTNAME}
::1             localhost.local         localhost  ${HOSTNAME}

# End of file
EOF
}

function ramdisk {
  grep '^HOOKS=' /etc/mkinitcpio.conf
  # sed -i 's/^HOOKS=.\+$/HOOKS=(base udev autodetect modconf block keymap keyboard usbinput encrypt lvm2 resume filesystems shutdown fsck)/g' /etc/mkinitcpio.conf
  sed -i 's/^HOOKS=.\+$/HOOKS=(base udev autodetect modconf block keymap keyboard encrypt lvm2 resume filesystems shutdown fsck)/g' /etc/mkinitcpio.conf
  # sed -i 's/^HOOKS=.\+$/HOOKS=(base udev autodetect keyboard keymap consolefont modconf block encrypt lvm2 filesystems fsck)/g' /etc/mkinitcpio.conf
  # HOOKS=(base udev autodetect keyboard keymap consolefont modconf block encrypt lvm2 filesystems fsck)

  echo 'The warnings about "Possibly missing firmware" for aic94xx and wd719x are for'
  echo 'SCSI cards, and can be safely ignored.'

  cd /boot
  mkinitcpio -p linux
}

function users_and_passwords {
  echo "----------"
  echo "Set password for root user:"
  passwd
  echo "----------"

  echo "Creating personal user:"
  useradd -m -g users -G audio,lp,optical,storage,video,games,power,scanner,wheel -s /bin/bash djr
  echo "----------"
  echo "Set password for personal user:"
  passwd djr
  echo "----------"

  echo "TODO: users_and_passwords"
}

function bootloader {
  # pacman -S fuse grub lvm2 os-prober

  # LUKS_LVM_PART_INDEX=5
  # LUKS_LVM_PART="/dev/sda${LUKS_LVM_PART_INDEX}"

  cat /etc/default/grub | grep GRUB_CMDLINE_LINUX=

  # cryptdevice=UUID=device-UUID:cryptlvm root=/dev/MyVolGroup/root
  sed -i 's/^GRUB_CMDLINE_LINUX=.\+$/GRUB_CMDLINE_LINUX="cryptdevice=\/dev\/sda5:VolGroup00 root=\/dev\/VolGroup00\/lvolroot1 resume=\/dev\/VolGroup00\/lvolswap amdgpu.dc=0"/' /etc/default/grub
  # sed -i 's/^GRUB_CMDLINE_LINUX=.\+$/GRUB_CMDLINE_LINUX="cryptdevice=\/dev\/sda5:VolGroup00"/' /etc/default/grub

  # grub-install --target=i386-pc --recheck /dev/sda
  # grub-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id=GRUB --recheck
  grub-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id=GRUB

  # After the installation, the main configuration file grub.cfg needs to be generated.
  grub-mkconfig -o /boot/grub/grub.cfg
}

function run {
  locales
  timezone
  network_config
  ramdisk
  users_and_passwords
  bootloader
}
run
