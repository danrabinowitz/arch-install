#!/bin/bash
set -euo pipefail
set -x

echo "This file is remote"

function create_partition {
  local id="$1"
  local size="$2"
  local typecode="$3"
  local name="$4"

  if [ "$size" == "" ]; then
    sgdisk /dev/sda --largest-new="$id"
  else
    sgdisk /dev/sda --new="$id":0:"$size"
  fi
  sgdisk /dev/sda --change-name="$id":"$name"
  sgdisk /dev/sda --typecode="$id":"$typecode"
  sgdisk /dev/sda --info="$id"
}

function partitions {
  sgdisk /dev/sda -p

  sgdisk /dev/sda --verify
  sgdisk /dev/sda --zap-all
  sgdisk /dev/sda --clear
  sgdisk /dev/sda --verify

  sgdisk /dev/sda -p

  create_partition 1 "+1M"   "ef02" "BIOS Boot"
  create_partition 2 "+550M" "ef00" "EFI Boot"
  create_partition 3 "+400M" "8300" "Unencrypted Boot"
  create_partition 4 "+400M" "8300" "Encrypted Boot"
  create_partition 5 ""      "8e00" "LUKS Encrypted for Linux LVM"

  sgdisk /dev/sda -p

  LUKS_LVM_PART_INDEX=5
  LUKS_LVM_PART="/dev/sda#{LUKS_LVM_PART_INDEX}"
}

function encrypted_lvm {
  echo "TODO: ---------- Verify/Review/Change/Update the 'cryptsetup' options!"
  # cryptsetup -v -y luksFormat --type luks2 "$LUKS_LVM_PART"
  cryptsetup -v -y -c aes-xts-plain64 -s 512 -h sha512 -i 5000 --use-random luksFormat "$LUKS_LVM_PART"

  # This will mount the unencrypted LVM device at /dev/mapper/cryptlvm
  cryptsetup luksOpen "$LUKS_LVM_PART" cryptlvm






}

function run {
  partitions
  encrypted_lvm
}
run
